<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>EDITAR POST</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900">
  <main class="bg-gray-400 max-w-screen-lg p-8 m-auto space-y-8">

    <section>
      <h2>POSTAGENS</h2>

      <select class=" px-4 py-2 " id="pageSelect">
        <% for (let i = 0; i < data.length; i++) { %>
          <option value="<%= data[i]._id %>"><%= data[i].metadata.title %></option>
        <% } %>
      </select>

      <button onclick="loadDataPage()" class="px-4 py-2 bg-green-700 font-semibold text-white">CARREGAR</button>
    </section>
  
    <header class="space-y-4">
      <h2 class="text-lg font-semibold">CABEÇALHO</h2>

      <div class="flex flex-col">
        <label for="titleHeader">Titulo:</label>
        <input id="titleHeader" type="text" class="px-4 py-2 border bg-gray-200">
      </div>

      <div class="flex flex-col">
        <label for="coverHeader">CAPA:</label>
        <input id="coverHeader" type="text" class="px-4 py-2 border bg-gray-200">
      </div>

      <div class="flex flex-col">
        <label for="descriptionHeader">DESCRIÇÃO:</label>
        <textarea name="" id="descriptionHeader" cols="30" rows="5" class="border bg-gray-200 p-4"></textarea>
      </div>
      
      <div class="flex flex-col">
        <label for="authorHeader">AUTOR:</label>
        <select class="border bg-gray-200" id="authorHeader">
          <option selected value="Gabriel Andrade">Gabriel Andrade</option>
        </select>
      </div>

      <div class="flex flex-col">
        <label for="categoriesHeader">CATEGORIAS:</label>
        <input id="categoriesHeader" type="text" class="px-4 py-2 border bg-gray-200" placeholder="categoria 1;; categoria 2;; categoria 3">
      </div>

      <div class="flex flex-col">
        <label for="">PALAVRAS CHAVE:</label>
        <input id="keywordsHeader" type="text" class="px-4 py-2 border bg-gray-200" placeholder="keyword 1;; keyword 2;; keyword 3">
      </div>
    </header>
    <hr class="border border-black">

    <section class="space-y-4 border">
      <h2 class="text-lg font-semibold">CONTEUDO</h2>

      <!-- CONTEUDO -->
      <section id="contentSection" class="border border-black p-4"></section>

      <!-- CONTROLES -->
      <div class="border p-4">
        <button onclick="newContent('h2')" class="px-4 py-1 bg-gray-600 text-white font-semibold">h2</button>
        <button onclick="newContent('p')" class="px-4 py-1 bg-gray-600 text-white font-semibold">p</button>
        <button onclick="newContent('img')" class="px-4 py-1 bg-gray-600 text-white font-semibold">img</button>
        <button onclick="newContent('ul')" class="px-4 py-1 bg-gray-600 text-white font-semibold">ul</button>
        <button onclick="newContent('iframe')" class="px-4 py-1 bg-gray-600 text-white font-semibold">iframe</button>
        <button onclick="newContent('blockquote')" class="px-4 py-1 bg-gray-600 text-white font-semibold">blockquote</button>
        <button onclick="newContent('a')" class="px-4 py-1 bg-gray-600 text-white font-semibold">a</button>
      </div>
    </section>
    <button onclick="update()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 w-full">ATUALIZAR POST</button>
  </main>
</body>
</html>


<script>
function getData(){
  const data = {
    // HEADER
    metadata:{
      title: document.getElementById('titleHeader').value,
      cover: document.getElementById('coverHeader').value,
      description: document.getElementById('descriptionHeader').value,
      author: document.getElementById('authorHeader').value,
      categories: document.getElementById('categoriesHeader').value.split(';;'),
      keywords: document.getElementById('keywordsHeader').value.split(';;')
    },
    content:[]
  }

  // CONTENT
  const itemContent = document.querySelectorAll('.itemContent')
  itemContent.forEach((e)=>{
    const typeElement = e.querySelector('h2');
    const contentElement = e.querySelector('textarea');

    const content = {
      type: typeElement.textContent.trim(), // Corrigido aqui
      content: contentElement.value.trim().includes(';;') ? contentElement.value.split(';;') : contentElement.value
    }

    data.content.push(content);

  })
  return data
}



  //adicionar nova caixa de conteudo
  let contId = 0;

function newContent(type, content) {
  contId++;
  const contentSection = document.querySelector('#contentSection');
  const newContentDiv = document.createElement('div');

  newContentDiv.id = 'content' + contId;
  newContentDiv.setAttribute('name', type);
  newContentDiv.innerHTML = `
    <div class="itemContent">
      <div class="flex justify-between pb-2">
        <h2 class="text-lg px-4 py-1 bg-gray-600 text-white font-semibold">${type}</h2>
        <button onclick="removeContent('content${contId}')" class="px-4 py-1 bg-red-600 text-white font-semibold">APAGAR</button>
      </div>
      <textarea name="" id="" cols="30" rows="1" class="border w-full min-h-20 max-h-20 p-4" placeholder="${type == 'h2' ? 'subtitulo...' : type == 'p' ? 'paragrafo' : type == 'img' ? 'link de imagem' : type == 'ul' ? 'item 1;; item 2;; item 3' : type == 'iframe' ? 'link de iframe' : type == 'blockquote' ? 'citação...' : type == 'a' ? 'link;; texto' : 'não identificado!'}">${content}</textarea>
    </div>
  `;

  contentSection.appendChild(newContentDiv);
}


  function removeContent(id){
    document.querySelector('#'+id).remove()
  }

  async function update(){
    const pageSelect = document.getElementById('pageSelect').value
    const data = await getData()
    fetch('/post/'+pageSelect,{
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    })
    .then((res)=>{
      console.log(res)
      alert('POST ATUALIZADO COM SUCESSO!')
    })
    .catch((err)=>{
      console.log(err)
      alert('ERRO AO ATUALIZADO POST!')
    })
  }


  //carregar dados da pagina
  function loadDataPage(){
    const pageSelect = document.getElementById('pageSelect').value
    console.log('/post/'+pageSelect)
    fetch('/post/'+pageSelect,{
      method: 'GET',
    })
    .then(res => res.json())
    .then((res)=>{
      console.log(res)
      writeDataInPage(res)
  
    })
    .catch((err)=>{
      console.log(err)
    })
  }



  function writeDataInPage(data){
    // HEADER
    document.getElementById('titleHeader').value = data.metadata.title
    document.getElementById('coverHeader').value = data.metadata.cover
    document.getElementById('descriptionHeader').value = data.metadata.description
    document.getElementById('authorHeader').value = data.metadata.author

    let categoriesHeader = data.metadata.categories.map(category => category.replace(/,/g, ';;')).join(';;');
    let keywordsHeader = data.metadata.keywords.map(keyword => keyword.replace(/,/g, ';;')).join(';;');

    document.getElementById('categoriesHeader').value = categoriesHeader;
    document.getElementById('keywordsHeader').value = keywordsHeader;

  
    // CONTENT
    data.content.forEach((e) => {
  if (typeof e.content === 'string') {
    const contentWithDoubleSemicolon = e.content.replace(/,/g, ';;');
    newContent(e.type, contentWithDoubleSemicolon);
  } else {
    newContent(e.type, e.content);
  }
});


 
  }
  

</script>